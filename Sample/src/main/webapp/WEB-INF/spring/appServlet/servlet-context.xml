<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:beans="http://www.springframework.org/schema/beans"
	 xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" 
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
	    http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/cache 
        http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
		http://www.springframework.org/schema/task 
		http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	
	<!-- spring cache-->	
    <cache:annotation-driven />

	<beans:bean id="accountServiceBean" class="com.cs.spring.service.UserServiceImpl"/> 

    <!-- generic cache manager --> 
   <beans:bean id="cacheManager" 
   class="org.springframework.cache.support.SimpleCacheManager">
     <beans:property name="caches"> 
       <beans:set> 
         <beans:bean 
           class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
           p:name="default" /> 
        
         <beans:bean
           class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
           p:name="accountCache" /> 
         
           <beans:bean
           class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
           p:name="accountCache2" /> 
       </beans:set> 
     </beans:property> 
   </beans:bean> 
 


	
	
	
	
	
	<!-- spring Scheduled-->	
	<context:annotation-config />      
	
    <context:component-scan base-package="com.cs.spring" />  	
	<task:annotation-driven scheduler="qbScheduler" mode="proxy"/>  
    <task:scheduler id="qbScheduler" pool-size="10"/>  
	
	
	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->
	

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->	
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<beans:bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<beans:property name="driverClass" value="org.mariadb.jdbc.Driver" />
		<beans:property name="jdbcUrl"
			value="jdbc:mysql://xxx.xxx.xxx.xxx:3306/Sample" />
		<beans:property name="user" value="xxxx" />
		<beans:property name="password" value="xxxxxx" />	
			
			
		<beans:property name="maxPoolSize" value="50"/>
		<beans:property name="minPoolSize" value="10"/>
		<beans:property name="maxStatements" value="100"/>
		<beans:property name="testConnectionOnCheckout" value="true"/>
		
	</beans:bean>


	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		
		
				
		<beans:property name="annotatedClasses">
			<beans:list>
				
				<beans:value>com.cs.spring.model.User</beans:value>
	
				
			</beans:list>
		</beans:property>
		
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	
  <!--  upload image -->
    <beans:bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
 
         <!-- setting maximum upload size -->
        <beans:property name="maxUploadSize" value="5000000" />
 
    </beans:bean>
  


	<beans:bean id="abstractDao" class="com.cs.spring.dao.DaoImplExtend">
	<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory"/>
	</beans:bean>
	

	
	
	<beans:bean id="userDAO" class="com.cs.spring.dao.UserDAOImpl" parent="abstractDao">
	</beans:bean>
	<beans:bean id="userService" class="com.cs.spring.service.UserServiceImpl">
		<beans:property name="userDAO" ref="userDAO"></beans:property>
	</beans:bean>
	

	

	<context:component-scan base-package="com.cs.spring.controller" />

	<tx:annotation-driven transaction-manager="transactionManager" />

	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>





</beans:beans>
